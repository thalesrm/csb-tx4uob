{"version":3,"sources":["OrbitControls.js"],"names":["THREE","OrbitControls","object","domElement","offset","quat","quatInverse","lastPosition","lastQuaternion","undefined","document","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","reset","scope","copy","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","Quaternion","setFromUnitVectors","up","inverse","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","window","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","element","body","PerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","OrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","event","preventDefault","button","clientX","clientY","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","addEventListener","subVectors","x","y","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","prototype","Object","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor"],"mappings":"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","file":"OrbitControls.09a3a844.js","sourceRoot":"..","sourcesContent":["/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nTHREE.OrbitControls = function (object, domElement) {\n  this.object = object;\n\n  this.domElement = domElement !== undefined ? domElement : document;\n\n  // Set to false to disable this control\n  this.enabled = true;\n\n  // \"target\" sets the location of focus, where the object orbits around\n  this.target = new THREE.Vector3();\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  this.minZoom = 0;\n  this.maxZoom = Infinity;\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  this.minPolarAngle = 0; // radians\n  this.maxPolarAngle = Math.PI; // radians\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n  this.minAzimuthAngle = -Infinity; // radians\n  this.maxAzimuthAngle = Infinity; // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  this.enableDamping = false;\n  this.dampingFactor = 0.25;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0;\n\n  // Set to false to disable rotating\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0;\n\n  // Set to false to disable panning\n  this.enablePan = true;\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n  // Set to false to disable use of the keys\n  this.enableKeys = true;\n\n  // The four arrow keys\n  this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n  // Mouse buttons\n  this.mouseButtons = {\n    ORBIT: THREE.MOUSE.LEFT,\n    ZOOM: THREE.MOUSE.MIDDLE,\n    PAN: THREE.MOUSE.RIGHT\n  };\n\n  // for reset\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom;\n\n  //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n\n    scope.update();\n\n    state = STATE.NONE;\n  };\n\n  // this method is exposed, but perhaps it would be better if we can make it private...\n  this.update = (function () {\n    var offset = new THREE.Vector3();\n\n    // so camera.up is the orbit axis\n    var quat = new THREE.Quaternion().setFromUnitVectors(\n      object.up,\n      new THREE.Vector3(0, 1, 0)\n    );\n    var quatInverse = quat.clone().inverse();\n\n    var lastPosition = new THREE.Vector3();\n    var lastQuaternion = new THREE.Quaternion();\n\n    return function update() {\n      var position = scope.object.position;\n\n      offset.copy(position).sub(scope.target);\n\n      // rotate offset to \"y-axis-is-up\" space\n      offset.applyQuaternion(quat);\n\n      // angle from z-axis around y-axis\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      spherical.theta += sphericalDelta.theta;\n      spherical.phi += sphericalDelta.phi;\n\n      // restrict theta to be between desired limits\n      spherical.theta = Math.max(\n        scope.minAzimuthAngle,\n        Math.min(scope.maxAzimuthAngle, spherical.theta)\n      );\n\n      // restrict phi to be between desired limits\n      spherical.phi = Math.max(\n        scope.minPolarAngle,\n        Math.min(scope.maxPolarAngle, spherical.phi)\n      );\n\n      spherical.makeSafe();\n\n      spherical.radius *= scale;\n\n      // restrict radius to be between desired limits\n      spherical.radius = Math.max(\n        scope.minDistance,\n        Math.min(scope.maxDistance, spherical.radius)\n      );\n\n      // move target to panned location\n      scope.target.add(panOffset);\n\n      offset.setFromSpherical(spherical);\n\n      // rotate offset back to \"camera-up-vector-is-up\" space\n      offset.applyQuaternion(quatInverse);\n\n      position.copy(scope.target).add(offset);\n\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n      } else {\n        sphericalDelta.set(0, 0, 0);\n      }\n\n      scale = 1;\n      panOffset.set(0, 0, 0);\n\n      // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (\n        zoomChanged ||\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n      ) {\n        scope.dispatchEvent(changeEvent);\n\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n\n        return true;\n      }\n\n      return false;\n    };\n  })();\n\n  this.dispose = function () {\n    scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\n    scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\n    scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\n\n    scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\n    scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\n    scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\n\n    document.removeEventListener(\"mousemove\", onMouseMove, false);\n    document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n    window.removeEventListener(\"keydown\", onKeyDown, false);\n\n    //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  };\n\n  //\n  // internals\n  //\n\n  var scope = this;\n\n  var changeEvent = { type: \"change\" };\n  var startEvent = { type: \"start\" };\n  var endEvent = { type: \"end\" };\n\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5\n  };\n\n  var state = STATE.NONE;\n\n  var EPS = 0.000001;\n\n  // current position in spherical coordinates\n  var spherical = new THREE.Spherical();\n  var sphericalDelta = new THREE.Spherical();\n\n  var scale = 1;\n  var panOffset = new THREE.Vector3();\n  var zoomChanged = false;\n\n  var rotateStart = new THREE.Vector2();\n  var rotateEnd = new THREE.Vector2();\n  var rotateDelta = new THREE.Vector2();\n\n  var panStart = new THREE.Vector2();\n  var panEnd = new THREE.Vector2();\n  var panDelta = new THREE.Vector2();\n\n  var dollyStart = new THREE.Vector2();\n  var dollyEnd = new THREE.Vector2();\n  var dollyDelta = new THREE.Vector2();\n\n  function getAutoRotationAngle() {\n    return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  var panLeft = (function () {\n    var v = new THREE.Vector3();\n\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n      v.multiplyScalar(-distance);\n\n      panOffset.add(v);\n    };\n  })();\n\n  var panUp = (function () {\n    var v = new THREE.Vector3();\n\n    return function panUp(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n      v.multiplyScalar(distance);\n\n      panOffset.add(v);\n    };\n  })();\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  var pan = (function () {\n    var offset = new THREE.Vector3();\n\n    return function pan(deltaX, deltaY) {\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0);\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        panLeft(\n          (2 * deltaX * targetDistance) / element.clientHeight,\n          scope.object.matrix\n        );\n        panUp(\n          (2 * deltaY * targetDistance) / element.clientHeight,\n          scope.object.matrix\n        );\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        // orthographic\n        panLeft(\n          (deltaX * (scope.object.right - scope.object.left)) /\n            scope.object.zoom /\n            element.clientWidth,\n          scope.object.matrix\n        );\n        panUp(\n          (deltaY * (scope.object.top - scope.object.bottom)) /\n            scope.object.zoom /\n            element.clientHeight,\n          scope.object.matrix\n        );\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n        );\n        scope.enablePan = false;\n      }\n    };\n  })();\n\n  function dollyIn(dollyScale) {\n    if (scope.object instanceof THREE.PerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object instanceof THREE.OrthographicCamera) {\n      scope.object.zoom = Math.max(\n        scope.minZoom,\n        Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n      );\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn(\n        \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n      );\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyOut(dollyScale) {\n    if (scope.object instanceof THREE.PerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object instanceof THREE.OrthographicCamera) {\n      scope.object.zoom = Math.max(\n        scope.minZoom,\n        Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n      );\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn(\n        \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n      );\n      scope.enableZoom = false;\n    }\n  }\n\n  //\n  // event callbacks - update the object state\n  //\n\n  function handleMouseDownRotate(event) {\n    //console.log( 'handleMouseDownRotate' );\n\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    //console.log( 'handleMouseDownDolly' );\n\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    //console.log( 'handleMouseDownPan' );\n\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    //console.log( 'handleMouseMoveRotate' );\n\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart);\n\n    var element =\n      scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    // rotating across whole screen goes 360 degrees around\n    rotateLeft(\n      ((2 * Math.PI * rotateDelta.x) / element.clientWidth) * scope.rotateSpeed\n    );\n\n    // rotating up and down along whole screen attempts to go 360, but limited to 180\n    rotateUp(\n      ((2 * Math.PI * rotateDelta.y) / element.clientHeight) * scope.rotateSpeed\n    );\n\n    rotateStart.copy(rotateEnd);\n\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    //console.log( 'handleMouseMoveDolly' );\n\n    dollyEnd.set(event.clientX, event.clientY);\n\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyIn(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyOut(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    //console.log( 'handleMouseMovePan' );\n\n    panEnd.set(event.clientX, event.clientY);\n\n    panDelta.subVectors(panEnd, panStart);\n\n    pan(panDelta.x, panDelta.y);\n\n    panStart.copy(panEnd);\n\n    scope.update();\n  }\n\n  function handleMouseUp(event) {\n    // console.log( 'handleMouseUp' );\n  }\n\n  function handleMouseWheel(event) {\n    // console.log( 'handleMouseWheel' );\n\n    if (event.deltaY < 0) {\n      dollyOut(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyIn(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    //console.log( 'handleKeyDown' );\n\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    //console.log( 'handleTouchStartRotate' );\n\n    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  function handleTouchStartDolly(event) {\n    //console.log( 'handleTouchStartDolly' );\n\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    dollyStart.set(0, distance);\n  }\n\n  function handleTouchStartPan(event) {\n    //console.log( 'handleTouchStartPan' );\n\n    panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  function handleTouchMoveRotate(event) {\n    //console.log( 'handleTouchMoveRotate' );\n\n    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    rotateDelta.subVectors(rotateEnd, rotateStart);\n\n    var element =\n      scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    // rotating across whole screen goes 360 degrees around\n    rotateLeft(\n      ((2 * Math.PI * rotateDelta.x) / element.clientWidth) * scope.rotateSpeed\n    );\n\n    // rotating up and down along whole screen attempts to go 360, but limited to 180\n    rotateUp(\n      ((2 * Math.PI * rotateDelta.y) / element.clientHeight) * scope.rotateSpeed\n    );\n\n    rotateStart.copy(rotateEnd);\n\n    scope.update();\n  }\n\n  function handleTouchMoveDolly(event) {\n    //console.log( 'handleTouchMoveDolly' );\n\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    dollyEnd.set(0, distance);\n\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyOut(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyIn(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n\n    scope.update();\n  }\n\n  function handleTouchMovePan(event) {\n    //console.log( 'handleTouchMovePan' );\n\n    panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    panDelta.subVectors(panEnd, panStart);\n\n    pan(panDelta.x, panDelta.y);\n\n    panStart.copy(panEnd);\n\n    scope.update();\n  }\n\n  function handleTouchEnd(event) {\n    //console.log( 'handleTouchEnd' );\n  }\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  function onMouseDown(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    if (event.button === scope.mouseButtons.ORBIT) {\n      if (scope.enableRotate === false) return;\n\n      handleMouseDownRotate(event);\n\n      state = STATE.ROTATE;\n    } else if (event.button === scope.mouseButtons.ZOOM) {\n      if (scope.enableZoom === false) return;\n\n      handleMouseDownDolly(event);\n\n      state = STATE.DOLLY;\n    } else if (event.button === scope.mouseButtons.PAN) {\n      if (scope.enablePan === false) return;\n\n      handleMouseDownPan(event);\n\n      state = STATE.PAN;\n    }\n\n    if (state !== STATE.NONE) {\n      document.addEventListener(\"mousemove\", onMouseMove, false);\n      document.addEventListener(\"mouseup\", onMouseUp, false);\n\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    if (state === STATE.ROTATE) {\n      if (scope.enableRotate === false) return;\n\n      handleMouseMoveRotate(event);\n    } else if (state === STATE.DOLLY) {\n      if (scope.enableZoom === false) return;\n\n      handleMouseMoveDolly(event);\n    } else if (state === STATE.PAN) {\n      if (scope.enablePan === false) return;\n\n      handleMouseMovePan(event);\n    }\n  }\n\n  function onMouseUp(event) {\n    if (scope.enabled === false) return;\n\n    handleMouseUp(event);\n\n    document.removeEventListener(\"mousemove\", onMouseMove, false);\n    document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (\n      scope.enabled === false ||\n      scope.enableZoom === false ||\n      (state !== STATE.NONE && state !== STATE.ROTATE)\n    )\n      return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    handleMouseWheel(event);\n\n    scope.dispatchEvent(startEvent); // not sure why these are here...\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (\n      scope.enabled === false ||\n      scope.enableKeys === false ||\n      scope.enablePan === false\n    )\n      return;\n\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.touches.length) {\n      case 1: // one-fingered touch: rotate\n        if (scope.enableRotate === false) return;\n\n        handleTouchStartRotate(event);\n\n        state = STATE.TOUCH_ROTATE;\n\n        break;\n\n      case 2: // two-fingered touch: dolly\n        if (scope.enableZoom === false) return;\n\n        handleTouchStartDolly(event);\n\n        state = STATE.TOUCH_DOLLY;\n\n        break;\n\n      case 3: // three-fingered touch: pan\n        if (scope.enablePan === false) return;\n\n        handleTouchStartPan(event);\n\n        state = STATE.TOUCH_PAN;\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (event.touches.length) {\n      case 1: // one-fingered touch: rotate\n        if (scope.enableRotate === false) return;\n        if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n        handleTouchMoveRotate(event);\n\n        break;\n\n      case 2: // two-fingered touch: dolly\n        if (scope.enableZoom === false) return;\n        if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n        handleTouchMoveDolly(event);\n\n        break;\n\n      case 3: // three-fingered touch: pan\n        if (scope.enablePan === false) return;\n        if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n        handleTouchMovePan(event);\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n\n    handleTouchEnd(event);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    event.preventDefault();\n  }\n\n  //\n\n  scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\n\n  scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\n  scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\n\n  scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n  scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\n  scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\n\n  window.addEventListener(\"keydown\", onKeyDown, false);\n\n  // force an update at start\n\n  this.update();\n};\n\nTHREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties(THREE.OrbitControls.prototype, {\n  center: {\n    get: function () {\n      console.warn(\"THREE.OrbitControls: .center has been renamed to .target\");\n      return this.target;\n    }\n  },\n\n  // backward compatibility\n\n  noZoom: {\n    get: function () {\n      console.warn(\n        \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\n      );\n      return !this.enableZoom;\n    },\n\n    set: function (value) {\n      console.warn(\n        \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\n      );\n      this.enableZoom = !value;\n    }\n  },\n\n  noRotate: {\n    get: function () {\n      console.warn(\n        \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\n      );\n      return !this.enableRotate;\n    },\n\n    set: function (value) {\n      console.warn(\n        \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\n      );\n      this.enableRotate = !value;\n    }\n  },\n\n  noPan: {\n    get: function () {\n      console.warn(\n        \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\n      );\n      return !this.enablePan;\n    },\n\n    set: function (value) {\n      console.warn(\n        \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\n      );\n      this.enablePan = !value;\n    }\n  },\n\n  noKeys: {\n    get: function () {\n      console.warn(\n        \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\n      );\n      return !this.enableKeys;\n    },\n\n    set: function (value) {\n      console.warn(\n        \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\n      );\n      this.enableKeys = !value;\n    }\n  },\n\n  staticMoving: {\n    get: function () {\n      console.warn(\n        \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\n      );\n      return !this.enableDamping;\n    },\n\n    set: function (value) {\n      console.warn(\n        \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\n      );\n      this.enableDamping = !value;\n    }\n  },\n\n  dynamicDampingFactor: {\n    get: function () {\n      console.warn(\n        \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\n      );\n      return this.dampingFactor;\n    },\n\n    set: function (value) {\n      console.warn(\n        \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\n      );\n      this.dampingFactor = value;\n    }\n  }\n});\n"]}